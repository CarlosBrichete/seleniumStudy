/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SeleniumTrainingCarlos;



import java.util.concurrent.TimeUnit;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class formsTests {
	static WebDriver driver = new ChromeDriver();
	
	formsMethods fm = new formsMethods(driver);
	
	private static final String expectedMandatoryMessage = "This field is required";
	private static final String expectedPartyRockMessage = "Let's party rock.";	
	private static final String name="Carlos";	
	private static final String date="08/10/1990";	
	private static final String comment="I like to find bugs";	
	private static final String expectedSuccesfulMessage = "Information sent successfully";

	@Before
	public void setUpTest() {
		driver.get("https://forms.liferay.com/web/forms/shared/-/form/122548");
		
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}
	
	@AfterClass
	public static void teardown() {
		driver.close();
	}
	
	@Test
	public void mandatoryNameField() {			
		fm.clickSubmitButton();
		
		String currentValue = driver.findElement(By.xpath(formsKeys.getNameFieldRequiredText())).getText();

		Assert.assertTrue(currentValue.contains(expectedMandatoryMessage));
	}
	
	@Test
	public void mandatoryDateField() {			
		fm.clickSubmitButton();
		
		String currentValue = driver.findElement(By.xpath(formsKeys.getDateFieldRequiredText())).getText();
		
		Assert.assertTrue(currentValue.contains(expectedMandatoryMessage));
	}
	
	@Test
	public void mandatoryCommentField() {			
		fm.clickSubmitButton();
		
		String currentValue = driver.findElement(By.xpath(formsKeys.getCommentFieldRequiredText())).getText();
		
		Assert.assertTrue(currentValue.contains(expectedMandatoryMessage));
	}
		
	@Test
	public void textPresent() {	
		String currentValue = driver.findElement(By.xpath(formsKeys.getPartyRockText())).getText();
		
		Assert.assertTrue(currentValue.contains(expectedPartyRockMessage));
	}

	@Test
	public void successfulSubmit() {
		fm.succesfulMessage(name, date, comment);
			
		String currentValue = driver.findElement(By.xpath(formsKeys.getSuccesfulMessage())).getText();
		
		Assert.assertTrue(currentValue.contains(expectedSuccesfulMessage));
	}
}


